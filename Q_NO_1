import heapq

def mergeKLists(lists):
    # Create a min-heap
    min_heap = []
    heapq.heapify(min_heap)

    # Add the first node from each linked list to the min-heap
    for i in range(len(lists)):
        if lists[i]:
            heapq.heappush(min_heap, (lists[i].val, i))

    # Create a dummy node and a pointer
    dummy = ListNode(0)
    curr = dummy

    # Merge the lists
    while min_heap:
        val, index = heapq.heappop(min_heap)
        node = lists[index]

        curr.next = node
        curr = curr.next

        # Move to the next node in the list
        lists[index] = lists[index].next
        if lists[index]:
            heapq.heappush(min_heap, (lists[index].val, index))

    return dummy.next
